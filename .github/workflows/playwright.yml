name: Playwright Tests & Report

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pages: write
      id-token: write
      pull-requests: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm install

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps

    - name: Run Playwright tests
      id: tests
      run: npx playwright test
      continue-on-error: true
      env:
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}

    - name: Prepare run-specific report directory
      if: always()
      run: |
        REPORT_DIR="playwright-report-${{ github.run_id }}"
        mkdir -p "$REPORT_DIR"
        cp -r playwright-report/* "$REPORT_DIR/"
        if [ -d test-results ]; then cp -r test-results "$REPORT_DIR/"; fi

    - name: Checkout existing GitHub Pages
      if: always()
      continue-on-error: true
      uses: actions/checkout@v4
      with:
        ref: gh-pages
        path: gh-pages

    - name: Assemble Pages content
      if: always()
      run: |
        mkdir -p pages
        if [ -d gh-pages ]; then rsync -a gh-pages/ pages/; fi
        rsync -a "playwright-report-${{ github.run_id }}/" "pages/${{ github.run_id }}/"
        touch pages/.nojekyll

    - name: Upload Playwright report as an artifact
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: "playwright-report-${{ github.run_id }}/"
        retention-days: 7

    - name: Setup Pages
      if: always()
      uses: actions/configure-pages@v4

    - name: Upload report to GitHub Pages
      if: always()
      uses: actions/upload-pages-artifact@v3
      with:
        path: pages/

    - name: Deploy to GitHub Pages
      if: always()
      id: deployment
      uses: actions/deploy-pages@v4

    - name: Comment with report link
      if: always() && github.event_name == 'pull_request'
      uses: actions/github-script@v7
      env:
        REPORT_URL: "${{ steps.deployment.outputs.page_url }}${{ github.run_id }}/"
      with:
        script: |
          const reportUrl = process.env.REPORT_URL;
          const prNumber = context.payload.pull_request.number;
          await github.rest.issues.createComment({
            ...context.repo,
            issue_number: prNumber,
            body: `Playwright report for this run: ${reportUrl}`
          });

    - name: Check test status
      if: steps.tests.outcome == 'failure'
      run: exit 1
